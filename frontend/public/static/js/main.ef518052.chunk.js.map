{"version":3,"sources":["components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Spinner/Spinner.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","context/auth-context.js","pages/events/Events.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingChart/BookingChart.js","components/Bookings/BookingControls/BookingControls.js","pages/bookings/Bookings.js","pages/auth/Auth.js","components/MainNavigation/MainNavigation.js","App.js","index.js"],"names":["modal","props","className","title","children","canCancel","onClick","onCancel","canConfirm","onConfirm","confirmText","backdrop","spinner","eventItem","key","eventId","price","Date","date","toLocaleDateString","userId","creatorId","onDetail","bind","eventList","events","map","event","_id","authUserId","creator","onViewDetail","React","createContext","token","login","tokenExpiration","logout","EventsPage","state","creating","isLoading","selectedEvent","isActive","startCreateEventHandler","setState","modalConfirmHandler","titleElRef","current","value","priceElRef","dateElRef","description","descriptionElRef","trim","length","requestBody","query","variables","desc","context","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","prevState","updatedEvents","push","data","createEvent","catch","err","console","log","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","id","createRef","this","fetchEvents","Fragment","htmlFor","type","ref","rows","Component","contextType","AuthContext","bookingList","bookings","booking","createdAt","onDelete","BOOKINGS_BUCKETS","min","max","bookingChart","chartData","labels","datasets","values","bucket","filteredBookingsCount","reduce","prev","fillColor","strokeColor","highlightFill","highlightStroke","style","textAlign","bookingControl","activeOutputType","onChange","BookingsPage","outputType","fetchBookings","deleteBookingHandler","bookingId","filter","changeOutputTypeHandler","content","BookingChart","AuthPage","isLogin","switchModeHandler","submitHandler","preventDefault","email","emailEl","password","passwordEl","onSubmit","placeholder","mainNavigation","Consumer","to","App","Provider","from","exact","path","component","Auth","Events","Bookings","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef518052.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Modal.css';\r\n\r\nconst modal = props => (\r\n  <div className=\"modal\">\r\n    <header className=\"modal__header\">\r\n      <h1>{props.title}</h1>\r\n    </header>\r\n    <section className=\"modal__content\">{props.children}</section>\r\n    <section className=\"modal__actions\">\r\n      {props.canCancel && (\r\n        <button className=\"btn\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n      )}\r\n      {props.canConfirm && (\r\n        <button className=\"btn\" onClick={props.onConfirm}>\r\n          {props.confirmText}\r\n        </button>\r\n      )}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nexport default modal;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => <div className=\"backdrop\"></div>;\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n  <div className=\"spinner\">\r\n    <div className=\"lds-dual-ring\" />\r\n  </div>\r\n);\r\n\r\nexport default spinner;\r\n\r\n","import React from 'react';\r\n\r\nimport './EventItem.css';\r\n\r\nconst eventItem = props => (\r\n  <li key={props.eventId} className=\"events__list-item\">\r\n    <div>\r\n      <h1>{props.title}</h1>\r\n      <h2>\r\n        ${props.price} - {new Date(props.date).toLocaleDateString()}\r\n      </h2>\r\n    </div>\r\n    <div>\r\n      {props.userId === props.creatorId ? (\r\n        <p>You're the owner of this event.</p>\r\n      ) : (\r\n        <button className=\"btn\" onClick={props.onDetail.bind(this, props.eventId)}>\r\n          View Details\r\n        </button>\r\n      )}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default eventItem;","import React from 'react';\r\n\r\nimport EventItem from './EventItem/EventItem';\r\nimport './EventList.css';\r\n\r\nconst eventList = props => {\r\n    const events = props.events.map(event => {\r\n        return (\r\n            <EventItem\r\n                key={event._id}\r\n                eventId={event._id}\r\n                title={event.title}\r\n                price={event.price}\r\n                date={event.date}\r\n                userId={props.authUserId}\r\n                creatorId={event.creator._id}\r\n                onDetail={props.onViewDetail}\r\n            />\r\n        );\r\n    });\r\n\r\n    return <ul className=\"event__list\">{events}</ul>;\r\n};\r\n\r\nexport default eventList;","import React from 'react';\r\n\r\nexport default React.createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: (token, userId, tokenExpiration) => {},\r\n    logout: () => {}\r\n});","import React, { Component } from 'react';\r\n\r\nimport './Events.css';\r\nimport Modal from '../../components/Modal/Modal.js';\r\nimport Backdrop from '../../components/Backdrop/Backdrop.js';\r\nimport Spinner from '../../components/Spinner/Spinner.js';\r\nimport EventList from '../../components/Events/EventList/EventList.js';\r\nimport AuthContext from '../../context/auth-context.js';\r\n\r\nclass EventsPage extends Component {\r\n  state = {\r\n    creating: false,\r\n    events: [],\r\n    isLoading: false,\r\n    selectedEvent: null\r\n  };\r\n\r\n  isActive = true;\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.titleElRef = React.createRef();\r\n    this.priceElRef = React.createRef();\r\n    this.dateElRef = React.createRef();\r\n    this.descriptionElRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEvents();\r\n  }\r\n\r\n  startCreateEventHandler = () => {\r\n    this.setState({ creating: true });\r\n  };\r\n\r\n  modalConfirmHandler = () => {\r\n    this.setState({ creating: false });\r\n    const title = this.titleElRef.current.value;\r\n    const price = +this.priceElRef.current.value;\r\n    const date = this.dateElRef.current.value;\r\n    const description = this.descriptionElRef.current.value;\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const event = { title, price, date, description };\r\n\r\n    const requestBody = {\r\n      query: `\r\n          mutation CreateEvent(\r\n            $title: String!,\r\n             $desc: String!,\r\n              $price: Float!,\r\n               $date: String!) \r\n               {\r\n            createEvent(eventInput:\r\n               {\r\n                 title: $title,\r\n               description: $desc,\r\n                price: $price, date: $date}) \r\n                {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          title: title,\r\n          desc: description,\r\n          price: price,\r\n          date: date\r\n        }\r\n    };\r\n\r\n    const token = this.context.token;\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        this.setState(prevState => {\r\n          const updatedEvents = [...prevState.events];\r\n          updatedEvents.push({\r\n            _id: resData.data.createEvent._id,\r\n            title: resData.data.createEvent.title,\r\n            description: resData.data.createEvent.description,\r\n            date: resData.data.createEvent.date,\r\n            price: resData.data.createEvent.price,\r\n            creator: {\r\n              _id: this.context.userId\r\n            }\r\n          });\r\n          return { events: updatedEvents };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false, selectedEvent: null });\r\n  };\r\n\r\n  fetchEvents() {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            events {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n              creator {\r\n                _id\r\n                email\r\n              }\r\n            }\r\n          }\r\n        `\r\n    };\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        const events = resData.data.events;\r\n        if (this.isActive) {\r\n          this.setState({ events: events, isLoading: false });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (this.isActive) {\r\n          this.setState({ isLoading: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  showDetailHandler = eventId => {\r\n    this.setState(prevState => {\r\n      const selectedEvent = prevState.events.find(e => e._id === eventId);\r\n      return { selectedEvent: selectedEvent };\r\n    });\r\n  };\r\n\r\n  bookEventHandler = () => {\r\n    if (!this.context.token) {\r\n      this.setState({ selectedEvent: null });\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n          mutation BookEvent($id: ID!) {\r\n            bookEvent(eventId: $id) {\r\n              _id\r\n             createdAt\r\n             updatedAt\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          id: this.state.selectedEvent._id\r\n        }\r\n    };\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.context.token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        this.setState({ selectedEvent: null });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\r\n        {this.state.creating && (\r\n          <Modal\r\n            title=\"Add Event\"\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.modalConfirmHandler}\r\n            confirmText=\"Confirm\"\r\n          >\r\n            <form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  rows=\"4\"\r\n                  ref={this.descriptionElRef}\r\n                />\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n        )}\r\n        {this.state.selectedEvent && (\r\n          <Modal\r\n            title={this.state.selectedEvent.title}\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.bookEventHandler}\r\n            confirmText={this.context.token ? 'Book' : 'Confirm'}\r\n          >\r\n            <h1>{this.state.selectedEvent.title}</h1>\r\n            <h2>\r\n              ${this.state.selectedEvent.price} -{' '}\r\n              {new Date(this.state.selectedEvent.date).toLocaleDateString()}\r\n            </h2>\r\n            <p>{this.state.selectedEvent.description}</p>\r\n          </Modal>\r\n        )}\r\n        {this.context.token && (\r\n          <div className=\"events-control\">\r\n            <p className=\"events-description\">Share your own events!</p>\r\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\r\n              Create event\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <EventList\r\n            events={this.state.events}\r\n            authUserId={this.context.userId}\r\n            onViewDetail={this.showDetailHandler}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventsPage;","import React from 'react';\r\n\r\nimport './BookingList.css';\r\n\r\nconst bookingList = props => ( \r\n    <ul className=\"bookings__list\">\r\n        {props.bookings.map(booking => {\r\n            return (\r\n                <li key={booking._id} className=\"bookings__item\">\r\n                    <div className=\"bookings__item-data\">\r\n                        {booking.event.title} -{' '}\r\n                        {new Date(booking.createdAt).toLocaleDateString()}\r\n                    </div>\r\n                    <div className=\"bookings__item-actions\">\r\n                        <button className=\"btn\"\r\n                            onClick={props.onDelete.bind(this, booking._id)}>\r\n                            Cancel</button>\r\n                    </div>\r\n                </li>\r\n            );\r\n        })}\r\n    </ul>\r\n);\r\n\r\nexport default bookingList;","import React from 'react';\r\nimport { Bar as BarChart } from 'react-chartjs';\r\n\r\nconst BOOKINGS_BUCKETS = {\r\n    'Cheap':  {\r\n        min: 0,\r\n        max: 100\r\n    },\r\n    'Normal': {\r\n        min: 100,\r\n        max: 200\r\n    },\r\n    'Expensive': {\r\n        min: 200,\r\n        max: 100000000\r\n    },\r\n}\r\n\r\nconst bookingChart = props => {\r\n    const chartData = { labels: [], datasets: [] };\r\n    let values = [];\r\n    for (const bucket in BOOKINGS_BUCKETS) {\r\n      const filteredBookingsCount = props.bookings.reduce((prev, current) => {\r\n        if (\r\n          current.event.price > BOOKINGS_BUCKETS[bucket].min &&\r\n          current.event.price < BOOKINGS_BUCKETS[bucket].max\r\n        ) {\r\n          return prev + 1;\r\n        } else {\r\n          return prev;\r\n        }\r\n      }, 0);\r\n      values.push(filteredBookingsCount);\r\n      chartData.labels.push(bucket);\r\n      chartData.datasets.push({\r\n        fillColor: '#429a6d',\r\n        strokeColor: '#2b8557',\r\n        highlightFill: '#71c99c',\r\n        highlightStroke: '#2b8557',\r\n        data: values\r\n      });\r\n      values = [...values];\r\n      values[values.length - 1] = 0;\r\n    }\r\n  \r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n        <BarChart data={chartData} />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default bookingChart;","import React from 'react';\r\n\r\nimport './BookingControls.css';\r\n\r\nconst bookingControl = props => {\r\n  return (\r\n    <div className=\"bookings-control\">\r\n      <button\r\n        className={props.activeOutputType === 'list' ? 'active' : ''}\r\n        onClick={props.onChange.bind(this, 'list')}\r\n      >\r\n        List\r\n      </button>\r\n      <button\r\n        className={props.activeOutputType === 'chart' ? 'active' : ''}\r\n        onClick={props.onChange.bind(this, 'chart')}\r\n      >\r\n        Chart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default bookingControl;","import React, { Component } from 'react'\r\n\r\nimport Spinner from '../../components/Spinner/Spinner.js';\r\nimport BookingList from '../../components/Bookings/BookingList/BookingList.js';\r\nimport AuthContext from '../../context/auth-context.js';\r\nimport BookingChart from '../../components/Bookings/BookingChart/BookingChart.js';\r\nimport BookingControls from '../../components/Bookings/BookingControls/BookingControls.js';\r\n\r\nexport default class BookingsPage extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        bookings: [],\r\n        outputType: 'list'\r\n    }\r\n\r\n    static contextType = AuthContext;\r\n\r\n    componentDidMount() {\r\n        this.fetchBookings();\r\n    }\r\n\r\n    fetchBookings = () => {\r\n        this.setState({ isLoading: true });\r\n        const requestBody = {\r\n            query: `\r\n              query {\r\n                bookings {\r\n                  _id\r\n                 createdAt\r\n                 event {\r\n                   _id\r\n                   title\r\n                   date\r\n                   price\r\n                 }\r\n                }\r\n              }\r\n            `\r\n        };\r\n\r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                const bookings = resData.data.bookings;\r\n                this.setState({ bookings: bookings, isLoading: false });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState({ isLoading: false });\r\n            });\r\n    };\r\n\r\n    deleteBookingHandler = bookingId => {\r\n        this.setState({ isLoading: true });\r\n        const requestBody = {\r\n            query: `\r\n              mutation CancelBooking($id: ID!) {\r\n                cancelBooking(bookingId: $id) {\r\n                _id\r\n                 title\r\n                }\r\n              }\r\n            `,\r\n            variables: {\r\n                id: bookingId\r\n            }\r\n        };\r\n\r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                this.setState(prevState => {\r\n                    const updatedBookings = prevState.bookings.filter(booking => {\r\n                        return booking._id !== bookingId;\r\n                    });\r\n                    return { bookings: updatedBookings, isLoading: false };\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState({ isLoading: false });\r\n            });\r\n    };\r\n\r\n    changeOutputTypeHandler = (outputType) => {\r\n        if (outputType === 'list') {\r\n            this.setState({ outputType: 'list' });\r\n        }\r\n        else {\r\n            this.setState({ outputType: 'chart' });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let content = <Spinner />;\r\n        if (!this.state.isLoading) {\r\n          content = (\r\n            <React.Fragment>\r\n              <BookingControls\r\n                activeOutputType={this.state.outputType}\r\n                onChange={this.changeOutputTypeHandler}\r\n              />\r\n              <div>\r\n                {this.state.outputType === 'list'  ? (\r\n                  <BookingList\r\n                    bookings={this.state.bookings}\r\n                    onDelete={this.deleteBookingHandler}\r\n                  />\r\n                ) : (\r\n                  <BookingChart bookings={this.state.bookings} />\r\n                )}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }\r\n        return <React.Fragment>{content}</React.Fragment>;\r\n      }\r\n    }","import React, { Component } from 'react';\r\n\r\nimport './Auth.css';\r\nimport AuthContext from '../../context/auth-context.js';\r\n\r\nclass AuthPage extends Component {\r\n  state = {\r\n    isLogin: true\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.emailEl = React.createRef();\r\n    this.passwordEl = React.createRef();\r\n  }\r\n\r\n  switchModeHandler = () => {\r\n    this.setState(prevState => {\r\n      return { isLogin: !prevState.isLogin };\r\n    });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const email = this.emailEl.current.value;\r\n    const password = this.passwordEl.current.value;\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query Login($email: String!, $password: String!) {\r\n          login(email: $email, password: $password) {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        email: email,\r\n        password: password\r\n      }\r\n    };\r\n\r\n    if (!this.state.isLogin) {\r\n      requestBody = {\r\n        query: `\r\n          mutation CreateUser($email: String!, $password: String!) {\r\n            createUser(userInput: {email: $email, password: $password}) {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          email: email,\r\n          password: password\r\n        }\r\n      };\r\n    }\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        if (resData.data.login.token) {\r\n          this.context.login(\r\n            resData.data.login.token,\r\n            resData.data.login.userId,\r\n            resData.data.login.tokenExpiration\r\n          );\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n        <div className=\"form-control\">\r\n          <input type=\"email\" placeholder=\"Email\" className=\"login-input\"\r\n            id=\"email\" ref={this.emailEl} />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <input type=\"password\" placeholder=\"Password\"\r\n            id=\"password\" ref={this.passwordEl} className=\"login-input\" />\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" onClick={this.switchModeHandler}>\r\n            Switch to {this.state.isLogin ? 'Signup' : 'Login'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthPage;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AuthContext from '../../context/auth-context.js';\r\nimport './MainNavigation.css';\r\n\r\nconst mainNavigation = props => (\r\n    <AuthContext.Consumer>\r\n        {context => {\r\n            return (\r\n                <header className=\"main-navigation\">\r\n                    <div className=\"main-navigation__logo\">\r\n                        <h1 className=\"app-logo\">Eventsys</h1>\r\n                    </div>\r\n                    <nav className=\"main-navigation__items\">\r\n                        <ul>\r\n                            {!context.token && (\r\n                                <li>\r\n                                    <NavLink to=\"/auth\">Authenticate</NavLink>\r\n                                </li>\r\n                            )}\r\n                            <li>\r\n                                <NavLink to=\"/events\">Events</NavLink>\r\n                            </li>\r\n                            {context.token && (\r\n                                <React.Fragment>\r\n                                    <li>\r\n                                        <NavLink to=\"/bookings\">Bookings</NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                            <button onClick={context.logout}>Logout</button>\r\n                                    </li>\r\n                                </React.Fragment>\r\n                            )}\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n            );\r\n        }}\r\n    </AuthContext.Consumer>\r\n);\r\n\r\nexport default mainNavigation;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport { Auth, Events, Bookings } from './pages';\nimport AuthContext from './context/auth-context.js';\nimport MainNavigation from './components/MainNavigation/MainNavigation.js';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null\n  };\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n                {this.state.token && (\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\n                )}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={Auth} />\n                )}\n                <Route path=\"/events\" component={Events} />\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={Bookings} />\n                )}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}